#include <iostream>
#include <string>

//hw extend test for conflict and extend date stuff; test try start and try end dates

struct dateStuff{
    std::string yr;
    std::string mon;
    std::string day;
    std::string hr;
    std::string min;
    std::string wholeDt;
};

dateStuff getUserDate();
void showUserDate(dateStuff inDate);
void testForConflict(dateStuff inStart, dateStuff inEnd, dateStuff startTryer, dateStuff endTryer);

int main(){

    dateStuff startDt{}, endDt{}, starttryDt{}, endtryDt{};

    std::cout << "Enter a start date and time.\n";
    startDt = getUserDate();
    showUserDate(startDt);

    std::cout << "Enter a finish date and time.\n";
    endDt = getUserDate();  //test conflicts by setting end date, then we poke holes in it.
    showUserDate(endDt);

    std::cout << "Now enter the start date and time probe.\n";
    starttryDt = getUserDate();

    std::cout << "Now enter the end date and time probe.\n";
    endtryDt = getUserDate();
    
    testForConflict(startDt, endDt, starttryDt, endtryDt);

    return 0;
}

dateStuff getUserDate(){

    dateStuff inDate;

    std::cout << "Year? "; std::cin >> inDate.yr; inDate.wholeDt = inDate.yr;
    std::cout << "Month? "; std::cin >> inDate.mon; inDate.wholeDt += inDate.mon;
    std::cout << "Day? "; std::cin >> inDate.day; inDate.wholeDt += inDate.day;
    std::cout << "Hour? "; std::cin >> inDate.hr; inDate.wholeDt += inDate.hr;
    std::cout << "Minutes? "; std::cin >> inDate.min; inDate.wholeDt += inDate.min;

    return inDate;
}

void showUserDate(dateStuff inDate){
    std::cout << inDate.yr << "-";
    std::cout << inDate.mon << "-";
    std::cout << inDate.day << " ";
    std::cout << inDate.hr << ":";
    std::cout << inDate.min << "\n";
    std::cout << inDate.wholeDt << "\n";
}
//check this at tryer
void testForConflict(dateStuff inStart, dateStuff inEnd, dateStuff startTryer, dateStuff endTryer){
    if(inStart.wholeDt > inEnd.wholeDt){
        std::cout << "This is not right, end dates need to be after start dates." << std::endl;
    } else {
        if((startTryer.wholeDt >= inStart.wholeDt) && (startTryer.wholeDt <= inEnd.wholeDt)){
            std::cout << "Your trial is inside the dates!";
        } else if((endTryer.wholeDt >= inStart.wholeDt) && (endTryer.wholeDt <= inStart.wholeDt)){
            std::cout << "Your trial is in the window.";
        }else if ((startTryer.wholeDt <= inStart.wholeDt) && (endTryer.wholeDt >= inEnd.wholeDt)){
            std::cout << "Your trial is in the window.";
        } else {
            std::cout << "Your trial is not in the window.";
        }
        
    }
}
